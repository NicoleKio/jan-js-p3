//------------------------------------------------------ ФУНКЦІЇ МАСИВІВ З КОЛБЕКАМИ --------------------------------------------------------

let users = [{id: 0, name: 'Ray', age: 20, status: false}, {id: 1, name: 'Luise', age: 14, status: false}, {
    id: 2,
    name: 'Lacus',
    age: 19,
    status: true
}, {id: 3, name: 'Chess', age: 18, status: true},];


//--------------------------------------------------------- ІТЕРАЦЯ ---------------------------------------------------------------
// forEach - метод, який має аргумент під псевдонімом callback. Передає в окрему ітерацію кожен об'єкт з масиву. Виконає щось для кожного елементу.
// callback являється функцією, у неї є аргументи: value, index, array. Вона сама нічоно не повертає. Це псевдонім аргументу.
// всередину треба передавати функцію, яка буде приймати 3 об'єкти: value, index, array.

users.forEach(function (value) {
    console.log(value);
})
//----------------------

//ітерація, об'єкт        дія з ним
users.forEach(value => console.log(value));


//------------------------------------------------------------ ФІЛЬТРАЦІЯ ----------------------------------------------------------
// filter повертає булеве значення. Ми виставляємо протокол по якому треба акцептувати чи ні наш об'єкт.
// Якщо приймаємо об'єкт, він потрапить у НОВИЙ МАСИВ, який буде повернений в кінці.
// АКЦЕПТ - прийняття.
// початковий масив буде не зміненим

let filteredUsers = users.filter(function (value) {
    return value.age > 19;
})
console.log(filteredUsers);

//-------------------------

//   змінна      фільтрація   об'єкт    умова
let usersFilt = users.filter(value => value.age > 18);
console.log(usersFilt)                                            // результат в масиві

console.log(users)


//--------------------------------------------------------- MAP ---------------------------------------------------------
// повертає НОВИЙ ОБ'ЄКТ.
// мапує наш об'єкт з масиву до якогось нового масиву.

let mapedUsers = users.map(function (value, index) {

    let newUser = {
        name: value.name,
        age: value.age,
        status: value.status,
        id: index + 1
    }

    return newUser;
})

console.log(mapedUsers);









